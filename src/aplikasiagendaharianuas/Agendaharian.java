/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasiagendaharianuas;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.sql.ResultSet;

/**
 *
 * @author ASUS
 */
public class Agendaharian extends javax.swing.JFrame {

    /**
     * Creates new form Agendaharian
     */
    public Agendaharian() {
        initComponents();
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
           new Object[][]{},
        new String[]{
        "Tanggal", "Pukul", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu", "Minggu"
    }
));
        cmbHari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
        "Pilih Hari", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu", "Minggu"
}));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        txtJam = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btnMasukDaftar = new javax.swing.JButton();
        cmbHari = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSimpanfile = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnHapus = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnSimpanDatabase = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnMuatData = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setText("Input Agenda");

        jLabel2.setText("Tanggal :");

        jLabel3.setText("Pukul     :");

        txtJam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamActionPerformed(evt);
            }
        });

        jLabel4.setText("Hari       :");

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Nama Agenda");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnMasukDaftar.setText("Masukkan Ke daftar Agenda");
        btnMasukDaftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasukDaftarActionPerformed(evt);
            }
        });

        cmbHari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cmbHari, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtJam))
                            .addComponent(btnMasukDaftar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtJam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMasukDaftar)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        jLabel6.setText("Daftar Agenda");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        btnSimpanfile.setText("simpan ke file");
        btnSimpanfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanfileActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnSimpanDatabase.setText("simpan ke database");
        btnSimpanDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanDatabaseActionPerformed(evt);
            }
        });

        btnCari.setText("CARI");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        jButton1.setText("import");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnMuatData.setText("Muat data");
        btnMuatData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuatDataActionPerformed(evt);
            }
        });

        jButton3.setText("reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(btnMuatData, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSimpanDatabase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                        .addComponent(btnSimpanfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnCari)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnUbah)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)))
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpanDatabase)
                    .addComponent(btnMuatData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSimpanfile)
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus)
                    .addComponent(btnUbah))
                .addGap(69, 69, 69)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jButton2.setFont(new java.awt.Font("Segoe UI Semibold", 3, 24)); // NOI18N
        jButton2.setText("KELUAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel7.setText("HALOO, SILAHKAN ISI AGENDA ANDA HARI INI...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void muatDataKeTabel() {
    // Ambil model JTable
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    // Bersihkan data lama dari JTable
    model.setRowCount(0);
    
    try (Connection connection = koneksi.getConnection()) {
        // Query untuk mengambil semua data dari tabel
        String query = "SELECT * FROM agenda";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        ResultSet resultSet = preparedStatement.executeQuery();

        // Iterasi melalui hasil query dan tambahkan ke JTable
        while (resultSet.next()) {
            Object[] row = {
                resultSet.getString("tanggal"), // Kolom tanggal
                resultSet.getString("pukul"),   // Kolom pukul
                resultSet.getString("senin"),   // Kolom senin
                resultSet.getString("selasa"),  // Kolom selasa
                resultSet.getString("rabu"),    // Kolom rabu
                resultSet.getString("kamis"),   // Kolom kamis
                resultSet.getString("jumat"),   // Kolom jumat
                resultSet.getString("sabtu"),   // Kolom sabtu
                resultSet.getString("minggu")   // Kolom minggu
            };
            model.addRow(row); // Tambahkan baris ke JTable
        }

        JOptionPane.showMessageDialog(this, "Data berhasil dimuat!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
    }
}

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        // Ambil model dari JTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Isi data dari baris yang dipilih ke input field
        cmbHari.setSelectedItem(model.getValueAt(selectedRow, 2)); // Sesuaikan kolom
        jDateChooser1.setDate(java.sql.Date.valueOf(model.getValueAt(selectedRow, 0).toString())); // Format tanggal
        txtJam.setText(model.getValueAt(selectedRow, 1).toString());
        jTextArea1.setText(model.getValueAt(selectedRow, 3) != null ? model.getValueAt(selectedRow, 3).toString() : "");
    }
 }
    
    private void saveTableToCSV() {
    System.out.println("Memulai metode saveTableToCSV"); // Debug awal
    
    // Membuka dialog untuk memilih lokasi penyimpanan file CSV
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Pilih lokasi untuk menyimpan file CSV");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("CSV Files", "csv"));

    int userSelection = fileChooser.showSaveDialog(null); // Ganti 'this' dengan 'null' agar dialog muncul
    System.out.println("Dialog file chooser muncul");

    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File fileToSave = fileChooser.getSelectedFile();
        System.out.println("User memilih file: " + fileToSave.getAbsolutePath());

        // Tambahkan ekstensi .csv jika tidak ada
        if (!fileToSave.getName().endsWith(".csv")) {
            fileToSave = new File(fileToSave.getAbsolutePath() + ".csv");
            System.out.println("Ekstensi .csv ditambahkan: " + fileToSave.getAbsolutePath());
        }

        try (PrintWriter writer = new PrintWriter(fileToSave)) {
            javax.swing.table.TableModel model = jTable1.getModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount();

            System.out.println("Jumlah baris: " + rowCount + ", Jumlah kolom: " + colCount);

            // Tulis header tabel
            for (int col = 0; col < colCount; col++) {
                writer.print(model.getColumnName(col)); // Menulis nama kolom
                if (col < colCount - 1) {
                    writer.print(","); // Tambahkan koma jika bukan kolom terakhir
                }
            }
            writer.println(); // Pindah ke baris baru setelah header

            // Tulis data tabel
            for (int row = 0; row < rowCount; row++) {
                for (int col = 0; col < colCount; col++) {
                    Object value = model.getValueAt(row, col);
                    writer.print(value != null ? value.toString() : ""); // Null-safe
                    if (col < colCount - 1) {
                        writer.print(","); // Tambahkan koma jika bukan kolom terakhir
                    }
                }
                writer.println(); // Pindah ke baris baru setelah setiap baris data
            }

            System.out.println("Data tabel berhasil ditulis ke file CSV");
            javax.swing.JOptionPane.showMessageDialog(
                null,
                "File CSV berhasil disimpan ke " + fileToSave.getAbsolutePath()
            );
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(
                null,
                "Gagal menyimpan file CSV: " + e.getMessage()
            );
        }
    } else {
        System.out.println("User membatalkan penyimpanan");
    }
}


    private void txtJamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamActionPerformed

    private void btnSimpanfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanfileActionPerformed
     saveTableToCSV() ;   
    }//GEN-LAST:event_btnSimpanfileActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    // Mendapatkan indeks baris yang dipilih untuk dihapus
    int selectedRowIndex = jTable1.getSelectedRow();
    
    // Mengecek apakah ada baris yang dipilih
    if (selectedRowIndex != -1) {
        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus baris ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Menghapus baris yang dipilih
            model.removeRow(selectedRowIndex);
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
        }
    } else {
        // Jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.");
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnMasukDaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasukDaftarActionPerformed

    // Ambil nilai dari inputan
    String hari = cmbHari.getSelectedItem().toString();
    java.util.Date tanggal = jDateChooser1.getDate();
    String pukul = txtJam.getText();
    String namaAgenda = jTextArea1.getText();

    // Validasi input
    if (hari.isEmpty() || tanggal == null || pukul.isEmpty() || namaAgenda.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Semua data harus diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Format tanggal ke dalam string
    java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("dd-MM-yyyy");
    String tanggalFormatted = dateFormat.format(tanggal);

    // Tambahkan ke tabel
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable1.getModel();

    // Cek apakah ada baris dengan tanggal yang sama
    boolean barisDitemukan = false;
    for (int i = 0; i < model.getRowCount(); i++) {
        if (model.getValueAt(i, 0).equals(tanggalFormatted) && model.getValueAt(i, 1).equals(pukul)) {
            // Temukan kolom berdasarkan hari
            int kolom = getHariKolom(hari);
            if (kolom != -1) {
                model.setValueAt(namaAgenda, i, kolom);
            }
            barisDitemukan = true;
            break;
        }
    }

    // Jika baris tidak ditemukan, tambahkan baris baru
    if (!barisDitemukan) {
        Object[] barisBaru = new Object[9];
        barisBaru[0] = tanggalFormatted; // Tanggal
        barisBaru[1] = pukul;           // Pukul
        int kolom = getHariKolom(hari);
        if (kolom != -1) {
            barisBaru[kolom] = namaAgenda; // Nama agenda sesuai hari
        }
        model.addRow(barisBaru);
    }

    // membersihkan input setelah menambahkan ke daftar agenda
    cmbHari.setSelectedIndex(0);
    jDateChooser1.setDate(null);
    txtJam.setText("");
    jTextArea1.setText("");
}

private int getHariKolom(String hari) {
    // menyesauiakan ke kolom hari pada tabel sesaui pilihan cmbHari
    switch (hari) {
        case "Senin": return 2;
        case "Selasa": return 3;
        case "Rabu": return 4;
        case "Kamis": return 5;
        case "Jumat": return 6;
        case "Sabtu": return 7;
        case "Minggu": return 8;
        default: return -1;
    }


    }//GEN-LAST:event_btnMasukDaftarActionPerformed

    private void btnSimpanDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanDatabaseActionPerformed

    // Ambil model dari JTable
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Pastikan JTable memiliki data untuk disimpan
    if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Tidak ada data untuk disimpan ke database.");
        return;
    }

    // Loop melalui baris di JTable untuk menyimpan data ke database
    try (Connection connection = koneksi.getConnection()) {
        String query = "INSERT INTO agenda (tanggal, pukul, senin, selasa, rabu, kamis, jumat, sabtu, minggu) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement preparedStatement = connection.prepareStatement(query);

        // Format tanggal dari JTable ke format MySQL (yyyy-MM-dd)
        SimpleDateFormat inputDateFormat = new SimpleDateFormat("dd-MM-yyyy"); // Format asal (input dari JTable)
        SimpleDateFormat mysqlDateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Format target (MySQL)

        // Iterasi melalui baris-baris JTable
        for (int i = 0; i < model.getRowCount(); i++) {
            // Ambil dan format tanggal
            String rawDate = model.getValueAt(i, 0).toString(); // Ambil tanggal dari JTable
            String formattedDate = mysqlDateFormat.format(inputDateFormat.parse(rawDate)); // Format ke yyyy-MM-dd

            preparedStatement.setString(1, formattedDate); // Tanggal (formatted)
            preparedStatement.setString(2, model.getValueAt(i, 1).toString()); // Pukul
            preparedStatement.setString(3, model.getValueAt(i, 2) != null ? model.getValueAt(i, 2).toString() : null); // Senin
            preparedStatement.setString(4, model.getValueAt(i, 3) != null ? model.getValueAt(i, 3).toString() : null); // Selasa
            preparedStatement.setString(5, model.getValueAt(i, 4) != null ? model.getValueAt(i, 4).toString() : null); // Rabu
            preparedStatement.setString(6, model.getValueAt(i, 5) != null ? model.getValueAt(i, 5).toString() : null); // Kamis
            preparedStatement.setString(7, model.getValueAt(i, 6) != null ? model.getValueAt(i, 6).toString() : null); // Jumat
            preparedStatement.setString(8, model.getValueAt(i, 7) != null ? model.getValueAt(i, 7).toString() : null); // Sabtu
            preparedStatement.setString(9, model.getValueAt(i, 8) != null ? model.getValueAt(i, 8).toString() : null); // Minggu

            // Tambahkan ke batch untuk eksekusi
            preparedStatement.addBatch();
        }

        // Eksekusi batch untuk menyimpan semua data
        preparedStatement.executeBatch();

        // Berikan notifikasi kepada pengguna
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan ke database!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke database: " + e.getMessage());
    }


    }//GEN-LAST:event_btnSimpanDatabaseActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        String keyword = txtCari.getText().trim(); // Ambil kata kunci dari JTextField
    if (keyword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan kata kunci untuk pencarian.");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Hapus data lama dari JTable

    try (Connection connection = koneksi.getConnection()) {
        String query = "SELECT * FROM agenda WHERE tanggal LIKE ? OR senin LIKE ? OR selasa LIKE ?";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        String searchPattern = "%" + keyword + "%";
        preparedStatement.setString(1, searchPattern);
        preparedStatement.setString(2, searchPattern);
        preparedStatement.setString(3, searchPattern);

        ResultSet resultSet = preparedStatement.executeQuery();

        while (resultSet.next()) {
            model.addRow(new Object[]{
                resultSet.getString("tanggal"),
                resultSet.getString("pukul"),
                resultSet.getString("senin"),
                resultSet.getString("selasa"),
                resultSet.getString("rabu"),
                resultSet.getString("kamis"),
                resultSet.getString("jumat"),
                resultSet.getString("sabtu"),
                resultSet.getString("minggu")
            });
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal mencari data: " + e.getMessage());
    }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
     // Mendapatkan baris yang dipilih dari JTable
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diubah.");
        return;
    }

    // Validasi input dari form
    String tanggal = jDateChooser1.getDate() != null ? 
        new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate()) : null;
    String pukul = txtJam.getText();
    String namaAgenda = jTextArea1.getText();
    String hari = cmbHari.getSelectedItem().toString();

    if (tanggal == null || pukul.isEmpty() || namaAgenda.isEmpty() || hari.equals("Pilih Hari")) {
        JOptionPane.showMessageDialog(this, "Lengkapi semua input sebelum mengubah data.");
        return;
    }

    // Mendapatkan model dari JTable
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Update data di JTable
    model.setValueAt(tanggal, selectedRow, 0); // Update tanggal
    model.setValueAt(pukul, selectedRow, 1);  // Update pukul
    int hariIndex = getHariKolom(hari); // Dapatkan indeks kolom berdasarkan hari
    if (hariIndex != -1) {
        model.setValueAt(namaAgenda, selectedRow, hariIndex); // Update agenda sesuai hari
    }

    // Bersihkan input setelah perubahan
    jDateChooser1.setDate(null);
    txtJam.setText("");
    jTextArea1.setText("");
    cmbHari.setSelectedIndex(0);

    JOptionPane.showMessageDialog(this, "Data di tabel berhasil diperbarui. Ingat untuk menyimpannya ke database jika diperlukan.");


    }//GEN-LAST:event_btnUbahActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Pilih file CSV untuk diimpor");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("CSV Files", "csv"));

    int result = fileChooser.showOpenDialog(this); // 'this' mengacu pada JFrame
    if (result == JFileChooser.APPROVE_OPTION) {
    File csvFile = fileChooser.getSelectedFile(); // File yang dipilih oleh pengguna
    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
        // Lanjutkan pembacaan file CSV
        String line;
        boolean isHeader = true;

        String sql = "INSERT INTO agenda (tanggal, pukul, senin, selasa, rabu, kamis, jumat, sabtu, minggu) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try (Connection connection = koneksi.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
            while ((line = br.readLine()) != null) {
                if (isHeader) {
                    isHeader = false; // Lewati header
                    continue;
                }

                String[] values = line.split(","); // Asumsikan nilai dipisahkan koma
                if (values.length != 9) continue; // Lewati baris jika format salah

                // Format tanggal
                SimpleDateFormat csvDateFormat = new SimpleDateFormat("dd-MM-yyyy");
                SimpleDateFormat dbDateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = dbDateFormat.format(csvDateFormat.parse(values[0]));

                // Set parameter untuk query
                preparedStatement.setString(1, formattedDate); // Tanggal
                preparedStatement.setString(2, values[1]); // Pukul
                preparedStatement.setString(3, values[2]); // Senin
                preparedStatement.setString(4, values[3]); // Selasa
                preparedStatement.setString(5, values[4]); // Rabu
                preparedStatement.setString(6, values[5]); // Kamis
                preparedStatement.setString(7, values[6]); // Jumat
                preparedStatement.setString(8, values[7]); // Sabtu
                preparedStatement.setString(9, values[8]); // Minggu

                preparedStatement.addBatch();
            }

            preparedStatement.executeBatch(); // Eksekusi batch untuk menyimpan data
            JOptionPane.showMessageDialog(this, "Impor CSV berhasil!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal mengimpor CSV: " + e.getMessage());
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal membaca file CSV: " + e.getMessage());
    }
} else {
    JOptionPane.showMessageDialog(this, "Operasi dibatalkan.");
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnMuatDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuatDataActionPerformed
       muatDataKeTabel();
    }//GEN-LAST:event_btnMuatDataActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Yakin lah pian handak keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
        System.exit(0); // Keluar dari aplikasi
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                                       
    // Konfirmasi reset tabel
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Apakah Anda yakin ingin menghapus semua data dari tabel?", 
        "Konfirmasi Reset", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Mendapatkan model dari JTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        // Hapus semua baris dari model
        model.setRowCount(0);

        // Bersihkan input pada form
        jDateChooser1.setDate(null);
        txtJam.setText("");
        jTextArea1.setText("");
        cmbHari.setSelectedIndex(0);

        // Tampilkan pesan berhasil
        JOptionPane.showMessageDialog(this, "Tabel berhasil di-reset. Anda dapat mengisi ulang data.");
    }


    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agendaharian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agendaharian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agendaharian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agendaharian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agendaharian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnMasukDaftar;
    private javax.swing.JButton btnMuatData;
    private javax.swing.JButton btnSimpanDatabase;
    private javax.swing.JButton btnSimpanfile;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbHari;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtJam;
    // End of variables declaration//GEN-END:variables
}
